

services:
  app:
    build:
      context: .
    ports:
      - '8080:8080'
    depends_on:
      - db
      - prepare-models
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/Rag_project
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_AI_OLLAMA_BASE_URL: http://ollama-llm:11434/
      SPRING_AI_OLLAMA_EMBEDDING_OPTIONS_MODEL: mxbai-embed-large
      SPRING_AI_VECTORSTORE_PGVECTOR_REMOVE_EXISTING_VECTOR_STORE_TABLE: "true"
      SPRING_AI_OLLAMA_CHAT_MODEL: llama3
      SPRING_AI_VECTORSTORE_PGVECTOR_INDEX_TYPE: HNSW
      SPRING_AI_VECTORSTORE_PGVECTOR_DISTANCE_TYPE: COSINE_DISTANCE
      SPRING_AI_VECTORSTORE_PGVECTOR_DIMENSIONS: "1024"
    command: ["/wait-for-it.sh", "db:5432", "--", "java", "-jar", "/app.jar"]

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postpostgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Rag_project
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql

  ollama-llm:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama

  prepare-models:
    image: ollama/ollama:latest
    depends_on:
      - ollama-llm
    volumes:
      - ollama:/root/.ollama
    environment:
      OLLAMA_HOST: http://ollama-llm:11434

volumes:
  postgres_data:
  ollama:

#services:
 # pgvector:
  #  image: 'pgvector/pgvector:pg16'
   # environment:
    #  - 'POSTGRES_DB=Rag_project'
     # - 'POSTGRES_PASSWORD=postgres'
     # - 'POSTGRES_USER=postpostgres'
    #labels:
     # - "org.springframework.boot.service-connection=postgres"
    #ports:
     # - '5432'*/